-- 1.1

COMMIT;
ALTER SESSION SET ddl_lock_timeout = 1;
SELECT *
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'EMPLOYEE'
  AND CONSTRAINT_TYPE = 'C';
ALTER TABLE EMPLOYEE DISABLE CONSTRAINT EMP_COMISSION_CK;

CREATE SEQUENCE EMPL_SEQ INCREMENT BY 1 START WITH 1 MAXVALUE 9999999
    CACHE 5 NOCYCLE;



-- 1.1 lab4z1_1.sql
ACCEPT fn PROMPT 'Ім`я:'
ACCEPT ln PROMPT 'Прізвище:'
ACCEPT di PROMPT 'Номер факультету:'
ACCEPT st PROMPT 'Дата зарахування:'
ACCEPT zp PROMPT 'Стипендія:'

INSERT INTO EMPLOYEE (ID, FIRST_NAME, LAST_NAME, USER_ID, DEPT_ID, START_DATE, COMISSION)
VALUES (EMPL_SEQ.NEXTVAL, '&fn', '&ln', EMPL_SEQ.CURRVAL, &di,
        TO_DATE('&dz', 'dd.mm.yyyy'), &zp);


-- ne otchet
INSERT INTO EMPLOYEE (ID, FIRST_NAME, LAST_NAME, USER_ID, DEPT_ID, START_DATE, COMISSION)
VALUES (EMPL_SEQ.NEXTVAL, 'Студент1', 'Гаврилов', EMPL_SEQ.CURRVAL, 10, TO_DATE('15.08.2000', 'dd.mm.yyyy'), 10);
INSERT INTO EMPLOYEE (ID, FIRST_NAME, LAST_NAME, USER_ID, DEPT_ID, START_DATE, COMISSION)
VALUES (EMPL_SEQ.NEXTVAL, 'Студент2', 'Миронов', EMPL_SEQ.CURRVAL, 37, TO_DATE('06.08.2001', 'dd.mm.yyyy'), 123);
INSERT INTO EMPLOYEE (ID, FIRST_NAME, LAST_NAME, USER_ID, DEPT_ID, START_DATE, COMISSION)
VALUES (EMPL_SEQ.NEXTVAL, 'Студент3', 'Ефремов', EMPL_SEQ.CURRVAL, 54, TO_DATE('22.08.2000', 'dd.mm.yyyy'), 300);
INSERT INTO EMPLOYEE (ID, FIRST_NAME, LAST_NAME, USER_ID, DEPT_ID, START_DATE, COMISSION)
VALUES (EMPL_SEQ.NEXTVAL, 'Студент4', 'Павлив', EMPL_SEQ.CURRVAL, 75, TO_DATE('16.08.2002', 'dd.mm.yyyy'), 246);
INSERT INTO EMPLOYEE (ID, FIRST_NAME, LAST_NAME, USER_ID, DEPT_ID, START_DATE, COMISSION)
VALUES (EMPL_SEQ.NEXTVAL, 'Студент5', 'Рогов', EMPL_SEQ.CURRVAL, 10, TO_DATE('11.08.2001', 'dd.mm.yyyy'), 147);
INSERT INTO EMPLOYEE (ID, FIRST_NAME, LAST_NAME, USER_ID, DEPT_ID, START_DATE, COMISSION)
VALUES (EMPL_SEQ.NEXTVAL, 'Студент6', 'Таранец', EMPL_SEQ.CURRVAL, 37, TO_DATE('02.08.2003', 'dd.mm.yyyy'), 69);
INSERT INTO EMPLOYEE (ID, FIRST_NAME, LAST_NAME, USER_ID, DEPT_ID, START_DATE, COMISSION)
VALUES (EMPL_SEQ.NEXTVAL, 'Студент7', 'Прохоров', EMPL_SEQ.CURRVAL, 54, TO_DATE('25.08.2001', 'dd.mm.yyyy'), 144);
INSERT INTO EMPLOYEE (ID, FIRST_NAME, LAST_NAME, USER_ID, DEPT_ID, START_DATE, COMISSION)
VALUES (EMPL_SEQ.NEXTVAL, 'Студент8', 'Романов', EMPL_SEQ.CURRVAL, 75, TO_DATE('04.08.2003', 'dd.mm.yyyy'), 89);
INSERT INTO EMPLOYEE (ID, FIRST_NAME, LAST_NAME, USER_ID, DEPT_ID, START_DATE, COMISSION)
VALUES (EMPL_SEQ.NEXTVAL, 'Студент9', 'Моисеев', EMPL_SEQ.CURRVAL, 10, TO_DATE('12.08.2002', 'dd.mm.yyyy'), 15);
INSERT INTO EMPLOYEE (ID, FIRST_NAME, LAST_NAME, USER_ID, DEPT_ID, START_DATE, COMISSION)
VALUES (EMPL_SEQ.NEXTVAL, 'Студент10', 'Гордеев', EMPL_SEQ.CURRVAL, 37, TO_DATE('18.08.2001', 'dd.mm.yyyy'), 7);

COMMIT;

SELECT *
FROM EMPLOYEE;


-- 1.2

SELECT LAST_NAME, COMISSION
FROM EMPLOYEE
WHERE COMISSION NOT BETWEEN
          100 AND 250;


SELECT FIRST_NAME || ' ' || LAST_NAME AS "ПІБ", COMISSION AS "Зарплата"
FROM EMPLOYEE
WHERE DEPT_ID IN (10, 37, 54)
ORDER BY LAST_NAME;


-- 1.4

SELECT LAST_NAME, TO_CHAR(START_DATE, 'day dd/mon/yyyy') AS START_DATE
FROM EMPLOYEE
WHERE TO_CHAR(START_DATE, 'yyyy') = '2001'
  AND LAST_NAME LIKE 'А%';


-- 2.1

INSERT INTO REGION (ID, NAME)
VALUES (50, 'Крим');
INSERT INTO REGION (ID, NAME)
VALUES (51, 'Одеса');


UPDATE DEPARTMENT
SET REGION_ID=44
WHERE ID IN (10, 37);

UPDATE DEPARTMENT
SET REGION_ID=50
WHERE ID = 54;

UPDATE DEPARTMENT
SET REGION_ID=NULL
WHERE ID = 75;

SELECT *
FROM DEPARTMENT;


-- 2.2

INSERT INTO DEPARTMENT (ID, NAME, REGION_ID)
VALUES (1, 'НТУУ-КПІ', 44);

INSERT INTO DEPARTMENT (ID, NAME, REGION_ID)
VALUES (2, 'КНУ', 44);


UPDATE DEPARTMENT
SET DEPT_ID=1
WHERE ID NOT IN (1, 2);


INSERT INTO DEPARTMENT (ID, NAME, REGION_ID, DEPT_ID)
VALUES (101, 'кафедра ТК', 44, 10);
INSERT INTO DEPARTMENT (ID, NAME, REGION_ID, DEPT_ID)
VALUES (102, 'кафедра ОТ', 44, 10);


SELECT *
FROM DEPARTMENT;


COMMIT;


-- 2.3

SELECT FIRST_NAME,
       LAST_NAME,
       DEPT_ID,
       (SELECT D.NAME
        FROM DEPARTMENT D
        WHERE D.ID = EMPLOYEE.DEPT_ID) AS DEPT_NAME
FROM EMPLOYEE
ORDER BY 4, 2;


-- 2.4

SELECT E.LAST_NAME, E.COMISSION, D.NAME AS DEPT_NAME, R.NAME AS REGION_NAME
FROM EMPLOYEE E, DEPARTMENT D, REGION R
WHERE E.DEPT_ID = D.ID
  AND D.REGION_ID = R.ID
  AND R.NAME LIKE 'К%'
ORDER BY E.LAST_NAME DESC;


-- 2.5


SELECT D.NAME AS DEPT_NAME, R.NAME AS REGION_NAME
FROM DEPARTMENT D, REGION R
WHERE D.REGION_ID = R.ID(+);

SELECT D.NAME AS DEPT_NAME, R.NAME AS REGION_NAME
FROM DEPARTMENT D, REGION R
WHERE D.REGION_ID(+) = R.ID;

SELECT D.NAME AS DEPT_NAME, R.NAME AS REGION_NAME
FROM DEPARTMENT D, REGION R
WHERE D.REGION_ID = R.ID;


-- 2.6

SELECT LEVEL, ID, NAME, DEPT_ID
FROM DEPARTMENT
START WITH ID = 101
CONNECT BY PRIOR DEPT_ID = ID;


-- 2.7

SELECT LEVEL, ID, NAME, DEPT_ID
FROM DEPARTMENT
START WITH DEPT_ID IS NULL
CONNECT BY DEPT_ID = PRIOR ID;


-- 3.1


SELECT REGION_ID, COUNT(ID)
FROM DEPARTMENT
GROUP BY REGION_ID;


-- 3.2

SELECT D.NAME, E.MIN_ZP, E.MAX_ZP
FROM DEPARTMENT D LEFT JOIN
     (SELECT DEPT_ID, MIN(COMISSION) AS MIN_ZP, MAX(COMISSION) AS MAX_ZP
      FROM EMPLOYEE
      GROUP BY DEPT_ID) E ON D.ID = E.DEPT_ID;


-- 3.3

SELECT DEPT_ID, MIN(COMISSION) AS MIN_ZP
FROM EMPLOYEE
WHERE TO_NUMBER(TO_CHAR(START_DATE, 'yyyy')) > 2001
GROUP BY DEPT_ID
HAVING MIN(COMISSION) < 100
ORDER BY 2;


-- 3.4

SELECT Z.DEPT_ID, MIN(Z.COMISSION) AS MIN_ZP
FROM EMPLOYEE Z
GROUP BY Z.DEPT_ID
HAVING MIN(Z.COMISSION) < 100
   AND EXISTS(SELECT 1
              FROM EMPLOYEE E
              WHERE E.DEPT_ID = Z.DEPT_ID
                AND TO_NUMBER(TO_CHAR(E.START_DATE, 'yyyy')) > 2001)
ORDER BY 2;
